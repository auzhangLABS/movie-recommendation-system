name: Django-Docker CD
'on':
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
  DOCKER_PASSWORD: '${{ secrets.DOCKER_PASSWORD }}'
  
jobs:
  build-backend:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Build backend image
        run: |  
          docker build -t d10-be:$GITHUB_SHA ./backend
    
      - name: Test backend image
        run: |
          docker run d10-be:$GITHUB_SHA python manage.py test

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Build frontend image
        run: |  
          docker build -t d10-fe:$GITHUB_SHA ./frontend
    
      - name: Test frontend image
        run: |
          docker run d10-fe:$GITHUB_SHA python manage.py test


  push-images:
  
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
  
    steps:
      - uses: actions/checkout@v3
      
      - name: Push backend image
        run: | 
          docker push d10-be:$GITHUB_SHA
           
      - name: Push frontend image  
        run: |
           docker push d10-fe:$GITHUB_SHA
  
  deploy:
    needs: [push-images]
    runs-on: ubuntu-latest
  
    steps:
  
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Configure AWS credentials
      
      - name: Install kubectl
        uses: aws-actions/setup-kubectl@v1
  
      - name: Deploy to EKS Cluster
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
        run: |  
          kubectl apply -f deploymentbe.yaml -f deploymentfe.yaml
  
      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
            path: ~/.cache/pip
            key: '${{ runner.os }}-pip-${{ hashFiles(''**/requirements.txt'') }}'
            restore-keys: |
              ${{ runner.os }}-pip-
              
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            
      - name: Run tests
        run: |
            python manage.py test
